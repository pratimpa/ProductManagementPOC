@page "/categories/create"
@page "/categories/edit/{CategoryId:int}"
@using Client.Models
@using Client.Services
@inject CategoryService CategoryService
@inject NavigationManager Navigation

<h3>@(CategoryId == 0 ? "Create Category" : "Edit Category")</h3>

<EditForm Model="@category" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mb-3">
        <label>Name:</label>
        <InputText class="form-control" @bind-Value="category.Name" />
    </div>

    <button type="submit" class="btn btn-success">Save</button>
    <button type="button" class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</EditForm>

@code {
    [Parameter] public int CategoryId { get; set; }
    private Category category = new();

    protected override async Task OnInitializedAsync()
    {
        if (CategoryId != 0)
        {
            var existingCategory = await CategoryService.GetCategoryAsync(CategoryId);
            if (existingCategory != null)
            {
                category = existingCategory;
            }
        }
    }

    private async Task HandleValidSubmit()
    {
        if (CategoryId == 0)
            await CategoryService.CreateCategoryAsync(category);
        else
            await CategoryService.UpdateCategoryAsync(category);

        Navigation.NavigateTo("/categories");
    }

    void Cancel() => Navigation.NavigateTo("/categories");
}

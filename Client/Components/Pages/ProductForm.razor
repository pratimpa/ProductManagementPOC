@page "/product-form"
@using Client.Services
@inject IProductService ProductService
@inject ICategoryService CategoryService


<EditForm Model="product" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group"><label>Name</label><InputText class="form-control" @bind-Value="product.Name" /></div>
    <div class="form-group"><label>Description</label><InputText class="form-control" @bind-Value="product.Description" /></div>
    <div class="form-group"><label>Price</label><InputNumber class="form-control" @bind-Value="product.Price" /></div>
    <div class="form-group"><label>Stock</label><InputNumber class="form-control" @bind-Value="product.Stock" /></div>
    <div class="form-group">
        <label>Category</label>
        <InputSelect class="form-control" @bind-Value="product.CategoryId">
            <option value="">-- Select Category --</option>
            @foreach (var cat in categories)
            {
                <option value="@cat.Id">@cat.Name</option>
            }
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private Product product = new();
    private List<Category> categories = new();
    protected override async Task OnInitializedAsync() => categories = await CategoryService.GetCategoriesAsync();
    private async Task HandleValidSubmit() => await ProductService.AddProductAsync(product);
}
